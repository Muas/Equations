@model dynamic

@{
    ViewBag.Title = "title";
    Layout = "~/Views/Shared/_Layout.cshtml";
}

<style type="text/css">
    .equations-field {
        width: 50%;
    }
    .error-description {
        display: none;
    }
    .result-area {
        width: 50%;
    }
</style>

<div class="container-fluid">
    <div class="row-fluid">
        <h5>This application allows to get solution for system of linear equations written in canonical form</h5>
    </div>
    <div class="row-fluid">
        <h3>Your system of linear equations:</h3>        
    </div>
    <div class="row-fluid">
        <textarea class = "equations-field" rows="7" id="equations-field" placeholder="Write here a system of linear equations" \></textarea>        
    </div>
    <div class="row-fluid">
        <label class="label-important error-description"></label>
    </div>
    <div class="row-fluid">
        <button class="btn" id="solve-equations-btn">Solve</button>    
    </div>
    <div class="row-fluid">
        <h3>Solution</h3>   
    </div>
    <div class="row-fluid">
        <textarea rows="7" class = "result-area" readonly="readonly" id="result-area"></textarea>
    </div>
</div>


<script type="text/javascript">
    $(function () {
        $('#solve-equations-btn').attr('disabled', 'true');
    });
    
    var text;

    var checkEquation = function (equation, i) {
        //if it is equation
        if (equation.indexOf('=') <= 0 || equation.indexOf('=') != equation.lastIndexOf('=') || equation.lastIndexOf('=') == equation.length - 1) {
            text += 'Check equation at line ' + (++i) + '\n';
            $('#result-area').val(text);
        }
        //if there is no wrong symbol
        for (var j = 0; j < equation.length; j++) {
            if (!checkCode(equation.charCodeAt(j))) {
                text += 'Equation at line ' + (++i) + ' contains wrong symbol\n';
                break;
            }
        }
        //if there is smth after = except numbers
        var equalityPos = equation.indexOf('=');
        for (j = equalityPos + 1; j < equation.length; j++) {
            if (!(equation[j].toLowerCase() >= '0' && equation[j].toLowerCase() <= '9')) {
                text += 'Equation at line ' + (++i) + ' is not in cannonical form\n';
                break;
            }
        }
    };

    var changeCommas = function (equation) {
        equation=equation.replace(/,/g, ".");
        $('#result-area').val($('#result-area').val() + '\n'+ equation);
    };

    var checkCode = function(code) {
        return code >= 48 && code <= 57 || code >= 65 && code <= 90 || code >= 97 && code <= 122 || code >= 42 && code <= 46 || code == 61 || code == 13 || code == 8;
    };

    $('#equations-field').keypress(function (e) {
        if (!checkCode(e.which)) {
            e.preventDefault();
            alert('You\'re doing smth wrong');
        }
        else {
            $('#solve-equations-btn').attr('disabled', false); }
        
    });

    $('#solve-equations-btn').click(function() {
        var equations = document.getElementById('equations-field').value.split('\n');
        text = '';
        equations.forEach(changeCommas);
        equations.forEach(checkEquation);
        if (text.length != 0) return false;
        $.ajax({
            url: '@(Url.Action("GetResult","Home"))',
            type: 'Post',
            datatype: 'Json',
            data: {
                equations: JSON.stringify(equations)
            }
        }).done(function(request) {
            if (request.result) {
                $('#result-area').val(request.reason);
            } else {
                alert(request.reason);
            }
        });
    });
</script>
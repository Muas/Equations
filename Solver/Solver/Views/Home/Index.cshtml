@model dynamic

@{
    ViewBag.Title = "title";
    Layout = "~/Views/Shared/_Layout.cshtml";
}

<style type="text/css">
    .equations-field {
        width: 50%;
    }
    .error-description {
        display: none;
        width: 50%;
        padding: 6px;
        margin-left: -4px;
    }
    .result-area {
        width: 50%;
    }
</style>

<div class="container">
    <div class="row-fluid">
        <h5>This application solves linear systems written in canonical form</h5>
        <ul>
            <li>Each equation should be in a canonical form (like 2*a+3*b=-8)  </li>
            <li>Equation can be written both with or without multiplication (e.g. 2*a+3*b=-8 is equal to 2a+3b=-8)</li>
            <li>Write one equation per line</li>
        </ul>
    </div>

    <div class="row-fluid">
        <h4>Your system of linear equations:</h4>        
    </div>
    <div class="row-fluid">
        <textarea class = "equations-field" rows="7" id="equations-field" placeholder="Write here a system of linear equations: one equation per line"></textarea>        
    </div>
    <div class="row-fluid ">
        <div class="error-description" id="error-information">
            <div class="alert alert-error"></div>
        </div>
    </div>
    <div class="row-fluid">
        <button class="btn" id="solve-equations-btn">Solve</button>    
    </div>
    <div class="row-fluid">
        <h4>Solution</h4>   
    </div>
    <div class="row-fluid">
        <textarea rows="7" class = "result-area" readonly="readonly" id="result-area"></textarea>
    </div>
</div>


<script type="text/javascript">
    
    var text;

    var checkEquation = function (equation, i) {
        if (equation != '') {
            //if it is equation
            if (equation.indexOf('=') <= 0 || equation.indexOf('=') != equation.lastIndexOf('=') || equation.lastIndexOf('=') == equation.length - 1) {
                text += 'Check equation at line ' + (++i) + '\n';
                showText();
                return;
            }
            //if there is no wrong symbol
            for (var j = 0; j < equation.length; j++) {
                if (!checkCode(equation.charCodeAt(j))) {
                    text += 'Equation at line ' + (++i) + ' contains wrong symbol\n';
                    showText();
                    return;
                }
            }
            //if there is smth after = except numbers
            var equalityPos = equation.indexOf('=');
            if (equalityPos == equation.length - 1) {
                text += 'Equation at line ' + (++i) + ' has no rigth side\n';
                showText();
            } else {
                var startIndex;
                if (equation[equalityPos + 1] == '-') {
                    if (equalityPos + 1 == equation.length - 1) {
                        text += 'Equation at line ' + (++i) + ' has wrong right side\n';
                        showText();
                        return;
                    } else startIndex = equalityPos + 2;
                } else {
                    startIndex = equalityPos + 1;
                }
                for (j = startIndex; j < equation.length; j++) {
                    if (!(equation[j].toLowerCase() >= '0' && equation[j].toLowerCase() <= '9')) {
                        text += 'Equation at line ' + (++i) + ' is not in a cannonical form\n';
                        showText();
                        return;
                    }
                }
            }
        }
    };

    var checkCode = function(code) {
        return code >= 48 && code <= 57 || code >= 65 && code <= 90 || code >= 97 && code <= 122 || code >= 42 && code <= 46 || code == 61 || code == 13 || code == 8;
    };

    $('#equations-field').keydown(function (e) {
        if (e.keyCode == 8 || e.keyCode == 46) {
            $('#error-information').hide();
        }
    });
    
    $('#equations-field').keypress(function (e) {
        $('#error-information').hide();
        if (!checkCode(e.which)) {
            e.preventDefault();
        }
        else {
            $('#solve-equations-btn').attr('disabled', false);
        }

    });

    var showText = function () {
        debugger;
        $('#error-information').show();
        $('#error-information').find('.alert').html(text);
    };

    $('#solve-equations-btn').click(function () {
        text = '';
        if ($('#equations-field').val() === '') {
            text += 'System should have at least one equation';
            showText();
            return;
        }

        var equations = document.getElementById('equations-field').value.split('\n');

        $('#result-area').val('');
        $('#result-area').removeClass('alert-error');
        equations.forEach(checkEquation);
        if (text.length != 0) return false;
        $.ajax({
            url: '@(Url.Action("GetResult","Home"))',
            type: 'Post',
            datatype: 'Json',
            data: {
                equations: JSON.stringify(equations)
            }
        }).done(function (request) {
            debugger;
            if (request.result) {
                $('#result-area').val(request.solution);
            } else {
                if (request.reason.isMathematical) {
                    $('#result-area').val(request.reason.reasonText);
                    $('#result-area').addClass('alert-error');
                }
                else {
                    text = request.reason.reasonText;
                    showText();
                };
            }
        });
    });
</script>